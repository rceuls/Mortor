@page "/reports"
@using Mortor.Web.Data

@inject MortorBlazorContext MortorBlazorContext;
@inject DialogService DialogService
@inject NavigationManager NavigationManager;
@inject FileService FileService;

<style>
    .app-fab--absolute {
        position: fixed;
        bottom: 1rem;
        right: 1rem;
    }
</style>

<RadzenGrid AllowFiltering="true" 
            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" 
            FilterMode="FilterMode.Advanced" 
            AllowPaging="true" 
            PageSize="5"
            AllowSorting="true" 
            Data="@_reports"
            TItem="Report">
    <Columns>
        <RadzenGridColumn TItem="Report" Property="CreatedBy" Title="Created By" Width="20rem" />
        <RadzenGridColumn TItem="Report" Property="TargetDate" Title="Created On" Width="20rem">
            <Template Context="data">
                @($"{data.TargetDate:d}")
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Report" Title="Actions" Width="10rem">
            <Template Context="data">
                <RadzenButton Text="Edit" Icon="edit" Click=@(() => OnViewReport(data.Id)) />
                <RadzenButton Text="Delete" Icon="delete" Click=@(() => OnDeleteReport(data.Id)) />
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>


<RadzenButton Click="@OnAddReport" 
              Text="Add Report" 
              Class="app-fab--absolute" />

@code {
    private IEnumerable<Report> _reports;
    private AddNewReport _addReportRef;

    protected override void OnInitialized()
    {
        SetReportDataSource();
    }

    private void SetReportDataSource()
    {
        _reports = MortorBlazorContext.Reports;
    }

    private void OnViewReport(Guid reportId)
    {
        NavigationManager.NavigateTo($"/reports/{reportId}");
    }

    private async Task OnAddReport()
    {
        await DialogService.OpenAsync("New Report",
            ds =>
                @<div>
                    <AddNewReport @ref=_addReportRef />
                    <div class="row">
                        <div class="col-md-12">
                            <RadzenButton Text="Save" 
                                          Click="async () => { 
                                                                 await _addReportRef.SaveReport();
                                                                 SetReportDataSource();
                                                                 ds.Close(true);
                                                             }"
                                          Style="margin-bottom: 10px; width: 150px"/>
                            <RadzenButton Text="Cancel"
                                          Click="() => ds.Close(false)"
                                          ButtonStyle="ButtonStyle.Secondary" 
                                          Style="margin-bottom: 10px; width: 150px"/>
                        </div>
                    </div>
                </div>
                );
    }

    private async Task OnDeleteReport(Guid reportId)
    {
        var res = await DialogService.Confirm("Are you sure you want to delete this report?");
        if (res ?? false)
        {
            var toRemove = await MortorBlazorContext.Reports.FindAsync(reportId);
            MortorBlazorContext.Reports.Remove(toRemove);
            await MortorBlazorContext.SaveChangesAsync();
            FileService.RemoveAllImagesFromReport(reportId.ToString());
        }
    }
}
